// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Движения.ДоходыИРасходы.Записывать = Истина;
	Движения.ЦеныНамеклатуры.Записывать = Истина;
	Для Каждого ТекСтрокаТовары из Товары Цикл
		Движение = Движения.ДоходыИРасходы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Основание = Ссылка;
		Движение.Статья = ТекСтрокаТовары.Товар;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		
		Движение_1 = Движения.ЦеныНамеклатуры.Добавить();
		Движение_1.Период = Дата;
		Движение_1.Номеклатура=ТекСтрокаТовары.Товар;
		Движение_1.Цена = ТекСтрокаТовары.Цена;
		Движение_1.Количество =ТекСтрокаТовары.Количество;
		Движение_1.ЕдиницаИзмерения =ТекСтрокаТовары.ЕдиницаИзмерения;
	КонецЦикла;
	
//	НаборЗаписей = РегистрыСведений.ЦеныНамеклатуры.СоздатьНаборЗаписей();
//	Регистратор = Ссылка;
//	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
//	НаборЗаписей.Прочитать();
//
//	Если НаборЗаписей.Выбран() Тогда
//		НоваяЗапись = НаборЗаписей.Добавить();
//		НоваяЗапись.Регистратор = Регистратор;
//		НоваяЗапись.Номеклатура = Справочники.Номенклатура.НайтиПоНаименованию("Молоко");
//		НоваяЗапись.Период =  НачалоДня(ТекущаяДата());
//		НоваяЗапись.Количество = 111;
//		НоваяЗапись.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоКоду("55");
//		НоваяЗапись.Цена = 222;
//	КонецЕсли;	
//	НаборЗаписей.Записать();

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
