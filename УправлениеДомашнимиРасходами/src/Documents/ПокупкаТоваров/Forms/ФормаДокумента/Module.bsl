// @strict-types


#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ЭтаФорма.ПВидНомеклатуры = Перечисления.ВидНоменклатуры.Товар;
	РазрешитьПовторыВТЧ = Ложь;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти
#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыТоварОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если НЕ РазрешитьПовторыВТЧ Тогда 
		Для Каждого строка из Объект.Товары Цикл 
			Если строка.Товар = ВыбранноеЗначение Тогда 
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Этот товар уже есть в списке товаров!";
				Сообщение.УстановитьДанные(строка);
				Сообщение.Поле = "Товар";
				Сообщение.Сообщить();
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//@skip-check property-return-type
	Если ВыбранноеЗначение.ВидНоменклатуры <> ОбщийМодульПокупкиВызовСервера.ПолучитьНоменклатуру(ПредопределенноеЗначение("Перечисление.ВидНоменклатуры.Товар")) Тогда 
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Вы выбрали не товар!";
				Сообщение.УстановитьДанные(ТекущиеДанные);
				Сообщение.Поле = "Товар";
				Сообщение.Сообщить();
		Возврат;	
	КонецЕсли;
	//@skip-check statement-type-change
	ТекущиеДанные.Товар = ВыбранноеЗначение;	
	ТекущиеДанные.ЕдиницаИзмерения = ОбщийМодульПокупкиВызовСервера.ПолучитьЕд_измПоСсылкеНаТовар(ВыбранноеЗначение);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Сумма = Текст*ТекущиеДанные.Количество;
	ПересчетСуммыДокумента()
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ТекущиеДанныые = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныые.Сумма = Текст*ТекущиеДанныые.Цена;
	ПересчетСуммыДокумента();
КонецПроцедуры

//Обработка фильтрации Номенклатуры по виду номенклатуры при выборе Товара
&НаКлиенте
Процедура ТоварыТоварНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора =  Новый Структура("Ссылка",
				ОбщийМодульПокупкиВызовСервера.ПолучитьНоменклатуру(ПредопределенноеЗначение("Перечисление.ВидНоменклатуры.Товар")));
	ПараметрыФормы = Новый Структура("Отбор",ЗначениеОтбора);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
    ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
    ПараметрыФормы.Вставить("РазрешитьВыборКорня", Ложь);
  	ФормаВыбора = ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора",ПараметрыФормы,Элемент);
//	ФормаВыбора  = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, Элемент, , , );
//	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыТоварАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если СтрДлина(Текст)>2 Тогда 
		ДанныеВыбора = Новый СписокЗначений();
		СписокТоваров = 
			ОбщийМодульПокупкиВызовСервера.ПолучитьНоменклатуру(ПредопределенноеЗначение("Перечисление.ВидНоменклатуры.Товар"),"%" +Текст + "%");
		ДанныеВыбора.ЗагрузитьЗначения(СписокТоваров);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчетСуммыДокумента();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПересчетСуммыДокумента()
	 СумммаДокумента =0;
	Для каждого товар из Объект.Товары Цикл 
		СумммаДокумента= СумммаДокумента + товар.Сумма;
	КонецЦикла;
	Объект.СумммаДокумента = СумммаДокумента;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции




#КонецОбласти
