


#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПВидНоменклатуры = Перечисления.ВидНоменклатуры.Услуга;
	РазрешитьПовторыВТЦ = Ложь;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти
#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	Если НЕ РазрешитьПовторыВТЦ Тогда
		Для Каждого строка из Объект.Услуги Цикл
			Если  строка.Услуга = ВыбранноеЗначение Тогда 
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Услуга с таким наименованием уже в списке!";
				Сообщение.УстановитьДанные(строка);
				Сообщение.Поле = "Услуга";
				Сообщение.Сообщить();
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ТекущиеДанные.Услуга = ВыбранноеЗначение;
	ТекущиеДанные.ЕдиницаИзмерения = ОбщийМодульПокупкиВызовСервера.ПолучитьЕд_измПоСсылкеНаТовар(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиУслугаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
		СтандартнаяОбработка = Ложь;
		ЗначениеОтбора =  Новый Структура("Ссылка",ОбщийМодульПокупкиВызовСервера.НоменклатураПоВиду(ПВидНоменклатуры));
		ПараметраФормы  = Новый Структура("Отбор",ЗначениеОтбора);
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора",ПараметраФормы,Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиУслугаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка= Ложь;
	Если СтрДлина(Текст)>2 Тогда
		 	ДанныеВыбора = Новый СписокЗначений();
		 	СписокУслуг = ОбщийМодульПокупкиВызовСервера.НоменклатураПоВиду(ПВидНоменклатуры,"%"+Текст+"%" );
		 	ДанныеВыбора.ЗагрузитьЗначения(СписокУслуг);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	ТекущиеДанные.Сумма = Текст*ТекущиеДанные.Количество;
	ПодсчетСуммыДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	ТекущиеДанные.Сумма = Текст*ТекущиеДанные.Цена;
	ПодсчетСуммыДокумента();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
Процедура ПодсчетСуммыДокумента()
	СуммаДокумента = 0;
	Для Каждого строка из Объект.Услуги Цикл
		СуммаДокумента = СуммаДокумента+строка.Сумма;
	КонецЦикла;
	Объект.СуммаДокумента = СуммаДокумента;
КонецПроцедуры

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
